[{"/root/hackandroll-2021/capybara/src/index.js":"1","/root/hackandroll-2021/capybara/src/reportWebVitals.js":"2","/root/hackandroll-2021/capybara/src/App.js":"3"},{"size":500,"mtime":1610089497683,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610089497685,"results":"6","hashOfConfig":"5"},{"size":1318,"mtime":1610089497679,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1u3jdq0",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"/root/hackandroll-2021/capybara/src/index.js",[],["16","17"],"/root/hackandroll-2021/capybara/src/reportWebVitals.js",[],"/root/hackandroll-2021/capybara/src/App.js",["18","19"],"import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [jumping, toggleJump] = useState(false);\n  const [alive, toggleLife] = useState(true);\n  const playerRef = useRef();\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  useEffect(() => {\n    if (jumping) {\n      const timer = setTimeout(() => {\n        toggleJump(false);\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [jumping]);\n\n  const handleKeyDown = (e) => {\n    const { key } = e;\n    // jump when SPACEBAR is pressed\n    if (key === \" \") {\n      playerJump();\n    }\n  };\n\n  const playerJump = () => {\n    toggleJump(true);\n  };\n\n  const checkAlive = () => {\n    // console.log(parseInt(window.getComputedStyle(playerRef).getPropertyValue(\"top\")));\n    console.log(playerRef.offsetTop);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      checkAlive();\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"game\">\n      <div id=\"player\"\n        className={\n          jumping ? \"jump\" : \"\"\n        }\n        ref={playerRef}></div>\n      <div id=\"cactus\"></div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":6,"column":10,"nodeType":"26","messageId":"27","endLine":6,"endColumn":15},{"ruleId":"24","severity":1,"message":"28","line":6,"column":17,"nodeType":"26","messageId":"27","endLine":6,"endColumn":27},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'alive' is assigned a value but never used.","Identifier","unusedVar","'toggleLife' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]